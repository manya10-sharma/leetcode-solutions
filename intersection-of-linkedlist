/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int n1 = 1;
        int n2 = 1;

        ListNode temp1 = headA;
        ListNode temp2 = headB;
        while(temp1!=null){
            temp1=temp1.next;
            n1++;
        }
        temp1 = headA;
        while(temp2 != null){
            temp2 = temp2.next;
            n2++;
        }
        temp2 = headB;
        if(n1>n2){
            for(int i=1 ; i<=n1-n2 ; i++){
                temp1 = temp1.next;
            }
        }
        else{
            for(int i=1 ; i<=n2-n1 ; i++){
                temp2 = temp2.next;
            }
        }
        while(temp1 != temp2){
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        return temp1;
    }
}