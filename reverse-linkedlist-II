/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if (head == null || left == right) return head;
        ListNode x = new ListNode(0);
        x.next = head;
        ListNode prev = x;
        for(int i=1 ; i<left ; i++){
            prev = prev.next;
        }
        ListNode curr = prev.next;
        ListNode n = null;

        for(int i=0 ; i<right-left ; i++){
            n = curr.next;
            curr.next = n.next;
            n.next = prev.next;
            prev.next = n;
        }
        return x.next;
    }
}