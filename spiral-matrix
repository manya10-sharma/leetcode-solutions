class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List li = new ArrayList<>();
        int n = matrix.length;
        int m = matrix[0].length;

        int left = 0; int right = m-1;
        int top = 0; int bottom = n-1;

    while (li.size() < n * m) {

        for(int i = left; i <= right && li.size() < n * m ; i++){
           li.add(matrix[top][i]);
        }
        top++;

        for(int i = top; i <= bottom && li.size() < n * m; i++){
             li.add(matrix[i][right]);
        }
        right--;

        for(int i = right; i >= left && li.size() < n * m; i--){
            li.add(matrix[bottom][i]);
        }
        bottom--;

        for(int i = bottom; i >= top && li.size() < n * m; i--){
            li.add(matrix[i][left]);
        }
        left++;
    }

        return li;
    }
}